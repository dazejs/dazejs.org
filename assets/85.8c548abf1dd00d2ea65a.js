(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[85],{

/***/ 542:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("# 任务调度\n框架内置的定时任务模块，基于 [GNU crontab](https://www.gnu.org/software/mcron/manual/html_node/Crontab-file.html) 实现\n\n## 模块定义\n\n基于框架的自动加载模块能力，使用 `@Schedule()` 装饰器来定义一个定时任务模块\n\n```ts {3}\nimport { Schedule } from '@dazejs/framework';\n\n@Schedule()\nexport class ExampleSchedule {\n\n}\n\n```\n\n## 设置执行时间\n\n使用 `Crontab` 命名空间内的装饰器来为你的方法设置执行时间:\n\n### `@Corntab.corn(expression: string)`\n\n根据 `GNU crontab` 表达式来设置定时任务的执行时间\n\n```ts {5}\nimport { Schedule, Crontab } from '@dazejs/framework';\n\n@Schedule()\nexport class ExampleSchedule {\n    @Crontab.corn('* * * * *')\n    my_func_name() {\n        console.log('每分钟执行一次')\n    }\n}\n\n```\n\n## Corn 语法\n\n```\n # ┌────────────── 秒 (可选)\n # │ ┌──────────── 分\n # │ │ ┌────────── 时\n # │ │ │ ┌──────── 天/月\n # │ │ │ │ ┌────── 月\n # │ │ │ │ │ ┌──── 天/星期\n # │ │ │ │ │ │\n # │ │ │ │ │ │\n # * * * * * *\n```\n\n其中每个位置可设置的值为：\n\n|     字段    |        值        |\n|--------------|---------------------|\n|    秒    |         0-59        |\n|    分    |         0-59        |\n|    时    |         0-23        |\n|    天/月  |         1-31        |\n|     月    |     1-12 (或者名称 - 英) |\n|  天/星期 |     0-7 (或者名称 - 英， 0/7 都可表示为星期日)  |\n\n使用多个值：\n\n```ts\n@Corntab.corn('1,2,3,4,5 * * * *')\n```\n\n使用范围:\n\n```ts\n@Corntab.corn('1-5 * * * *')\n```\n\n使用步长：\n\n```ts\n@Corntab.corn('*/2 * * * *')\n```\n\n使用名称：\n\n```ts\n@Corntab.corn('* * * January,September *')\n@Corntab.corn('* * * Jan,Sep *')\n```\n\n**推荐使用封装好的便捷方法**\n\n```ts\n// 定义任务每分钟执行一次\n@Corntab.everyMinute()\n// 约束任务只在工作日进行\n@Corntab.weekdays()\n```\n\n> 更多便捷方法参考 [便捷方法](#便捷方法) 段落\n \n## 在单台服务器上运行任务\n> 要使用这个功能必须启用 Redis 作为第三方存储\n\n如果你的应用运行在多台服务器上，可能需要限制调度任务只在某台服务器上运行。\n\n要告知任务只在单台服务器上运行，在定义调度任务时使用 `@Corntab.runOnSingletonServer()` 装饰器即可。第一台获取到该任务的服务器会给任务上一把原子锁以阻止其他服务器同时运行该任务：\n\n```ts\nimport { Schedule, corntab } from '@dazejs/framework';\n\n@Schedule()\nexport class ExampleSchedule {\n    @Corntab.runOnSingletonServer()\n    @Corntab.everyMinute()\n    task1() {\n        // TODO\n    }\n}\n```\n\n> 需要注意的是：runOnSingletonServer 只能作用在分钟级别的人物调度，即不支持低于1分钟的任务，否则会以1分钟作为执行间隔时间\n\n#### 如何开启 redis 缓存\n\n\n\n## 便捷方法\n\n框架还对 `corntab` 做了一些常用的语法封装\n\n### 调度计划\n\n##### `everySecond()`\n\n每秒执行一次任务\n\n##### `everyTwoSeconds()`\n\n每2秒执行一次任务\n\n##### `everyThreeSeconds()`\n\n每3秒执行一次任务\n\n##### `everyFourSeconds()`\n\n每4秒执行一次任务\n\n##### `everyFiveSeconds()`\n\n每5秒执行一次任务\n\n##### `everyTenSeconds()`\n\n每10秒执行一次任务\n\n##### `everyFifteenSeconds()`\n\n每15秒执行一次任务\n\n##### `everyThirtySeconds()`\n\n每30秒执行一次任务\n\n##### `everyMinute()`\n\n每分钟执行一次任务\n\n##### `everyTwoMinutes()`\n\n每2分钟执行一次任务\n\n##### `everyThreeMinutes()`\n\n每3分钟执行一次任务\n\n##### `everyFourMinutes()`\n\n每4分钟执行一次任务\n\n##### `everyFiveMinutes()`\n\n每5分钟执行一次任务\n\n##### `everyTenMinutes()`\n\n每10分钟执行一次任务\n\n##### `everyFifteenMinutes()`\n\n每15分钟执行一次任务\n\n##### `everyThirtyMinutes()`\n\n每30分钟执行一次任务\n\n##### `hourly()`\n\n每小时执行执行一次任务\n\n##### `hourlyAt(offset: number | number[])`\n\n固定时间(小时)执行, 例如 `hourlyAt([1, 5, 12])`\n\n##### `everyTwoHours()`\n\n每2个小时执行一次任务\n\n##### `everyThreeHours()`\n\n每3个小时执行一次任务\n\n##### `everyFourHours()`\n\n每4个小时执行一次任务\n\n##### `everySixHours()`\n\n每6个小时执行一次任务\n\n##### `daily()`\n\n每天 `00:00` 执行一次任务\n\n##### `dailyAt(time: string)`\n\n在每天的固定时间执行, 例如 `dailyAt('13')`, `dailyAt('13:00')`, `dailyAt('13:00:01')`\n\n##### `weekly()`\n\n每周日 00:00 执行一次任务\n\n##### `weeklyOn(dayOfWeek: number | string, time = '0:0')`\n\n每周的某一天某个时间执行一次任务\n\n##### `monthly`\n\n每月第一天 00:00 执行一次任务\n\n##### `monthlyOn(dayOfMonth: string | number, time = '0:0')`\n\n每月某一天的某个时间执行一次任务\n\n##### `quarterly()`\n\n每季度第一天 00:00 执行一次任务\n\n##### `yearly()`\n\n每年第一天 00:00 执行一次任务\n\n##### `yearlyOn(month: string | number = 1, dayOfMonth: string | number = 1, time = '0:0')`\n\n在每年的某个月的某一天的某个时间执行一次任务\n\n\n### 约束条件\n\n##### `weekdays()`\n\n限制任务在工作日执行\n\n##### `weekends()`\n\n限制任务在周末执行\n\n##### `mondays()`\n\n限制任务在周一执行\n\n##### `tuesdays()`\n\n限制任务在周二执行\n\n##### `wednesdays()`\n\n限制任务在周三执行\n\n##### `thursdays()`\n\n限制任务在周四执行\n\n##### `fridays()`\n\n限制任务在周五执行\n\n##### `saturdays()`\n\n限制任务在周六执行\n\n##### `sundays()`\n\n限制任务在周日执行\n\n\n");

/***/ })

}]);